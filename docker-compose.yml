services:
  web:
    build: .
    container_name: web_app
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails db:environment:set && bundle exec rails db:migrate && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - .:/usr/src/app
      - bundle:/usr/local/bundle
    ports:
      - '3000:3000'
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - instabug_task

  db:
    image: mariadb:10.5.8
    container_name: ruby_db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ruby_db
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - db_data:/var/lib/mysql/
      - ./compose/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - instabug_task

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - instabug_task
    ports:
      - 9200:9200

  sidekiq:
    depends_on:
      - 'db'
      - 'redis'
      - 'web'
    build: .
    command: bundle exec sidekiq
    volumes:
      - .:/usr/src/app
    env_file:
      - '.env'
    networks:
      - instabug_task

  redis:
    container_name: redis
    image: redis
    volumes:
      - redis_data:/data
    networks:
      - instabug_task

  rabbitmq:
    container_name: rabbitmq
#    image: "rabbitmq:3.9-alpine"
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
      - rabbitmq:/var/log/rabbitmq
    networks:
      - instabug_task

networks:
  instabug_task:
    driver: bridge
    name: instabug_task

volumes:
  db_data:
  redis_data:
  bundle:
  rabbitmq:
  esdata1:
